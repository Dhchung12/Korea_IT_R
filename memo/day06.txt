day06. 데이터프레임, 리스트, 요인

데이터프레임(dataframe)
	2차원 매트릭스 구조이지만 각 열마다 다른 자료형의
	값을 저장할 수 있다

	실질적으로 사용하는 엑셀, 데이터베이스의 테이블 형태이며
	R에서 가장 많이 사용한다

	* 리스트와 벡터의 혼합형으로 열은 리스트, 열 안의 데이터는
	벡터 자료구조이다
	** variable -> 열(세로줄) -> 변수(변인)
	    observation -> 행(가로줄) -> 관측치(관측값)

데이터프레임 생성
	data.frame(열 이름 = 벡터, 열 이름 = 벡터...)
	여러개의 벡터 하나하나가 하나의 열로 생성된다
	data.frame(매트릭스) -> 매트릭스 전체가 데이터프레임이 된다

데이터프레임에서 요소 가져오기
	1. 데이터프레임명[행 인덱스번호, 열 인덱스번호]
	2. 데이터프레임명[인덱스번호] 또는 데이터프레임명[이름]
		-> 해당 열을 가져온다
	3. 데이터프레임명$열이름 -> 해당 열을 가져온다

데이터프레임의 정보
	1. str() : 데이터프레임의 요약정보를 보여준다
	2. length() : 데이터프레임의 열의 수
	3. summary() : 데이터프레임의 기초 통계 정보를 보여준다

데이터프레임의 사용
	1. 추가
		데이터프레임명[새로운 열 인덱스번호] <- 새로운값
		데이터프레임명[새로운 열 이름] <- 새로운값
		데이터프레임명$새로운 열 이름 <- 새로운값
		* 데이터프레임은 열마다 다른 자료형을 가지므로
		행으로 추가시 자료형이 변환되는 부분을 주의해야 한다
	2. 수정
		데이터프레임의 수정할 요소 <- 수정할 값
		
	3. 삭제
		데이터프레임명 <- 삭제할 요소를 제외하고 가져온
				데이터프레임
		데이터프레임명$삭제할 열 이름 <- NULL

리스트(list)
	벡터, 행렬, 배열, 데이터프레임.. 등 다양한 자료구조를 저장하는 구조
	여러개의 자료구조를 저장하는 하나의 목록

	* 파이썬의 dictionary 자료구조와 유사하다
	* key-value 한쌍으로 데이터가 저장된다
	* key를 직접 지정하지 않으면, 자동으로 정수형 인덱스번호가 부여된다

	** 리스트(list) -> generic vector
	   벡터(vector) -> atomic vector

리스트 생성
	list(벡터, 매트릭스, 배열, 데이터프레임, 하나의 값 등...)
	list(키= 값, 키 = 값, 키 = 값 ....)
	* 키를 직접 명시하지 않으면 인덱스 번호를 키로 사용한다

리스트의 요소 가져오기
	리스트명[인덱스번호] -> 또다른 리스트로 요소를 가져온다
	리스트명[[인덱스번호]] -> 해당 요소의 자료형으로 가져온다
	리스트명$키 -> 대괄호 2번을 사용한것처럼 해당 요소의 자료형으로
		        가져온다

리스트의 사용
	1. 추가
		리스트명[[새로운키]] <- 새로운 값
	2. 수정
		리스트명[[키]] <- 수정할 값
	3. 삭제
		리스트명[[키]] <- NULL
		리스트명$키 <- NULL

요인(factor)
	범주형 데이터를 표현하는 자료형
	범주형 데이터 : 정해진 몇개의 범주의 값으로 구성된 데이터
	ex) 성별(남자, 여자), 혈액형(A, B, AB, O)

	벡터와 동일한 구조이지만 지정한 범주안의 값만 저장할수 있다
	범주(level, 수준) : 저장될수 있는 데이터의 범위

	genders <- c("남성", "여성", "남성")
	genders[4] <- "강아지"



	


















 
























	







