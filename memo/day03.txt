day03. 관계연산자, 논리연산자, 자료구조

관계연산자(비교연산자)
	관계 연산자의 연산결과는 논리형이 나온다

	연산자		의미		예시
	=================================
	==		같다		a == b
	!=		같지 않다		a != b
	>		크다(초과)	a > b
	>=		크거나 같다(이상)	a >= b
	<		작다(미만)	a < b
	<=		작거나 같다(이하)	a <= b

	* a == b : a와 b가 같으면 TRUE, 같지 않으면 FALSE
	* a != b : a와 b가 같지 않으면 TRUE, 같으면 FALSE
	* a > b : a가 b보다 크면 TRUE, 작거나 같으면 FALSE
	...

논리연산자
	논리 연산자의 연산결과는 논리형이 나온다
	
	연산자		의미		예시
	===================================
	&		AND(그리고)	조건1 & 조건2
	|		OR(또는)		조건1 | 조건2
	!		NOT(부정)	!조건1

	* &(AND) : 두개의 조건이 모두 TRUE 이면 TRUE
		한개라도 FALSE 이면 FALSE

	* |(OR) : 두개의 조건중에 하나라도 TRUE 이면 TRUE
		모두 FALSE 이면 FALSE
	
	* !(NOT) : 조건을 반대로 바꾼다(참 -> 거짓, 거짓 -> 참)

R의 자료구조
	1. 스칼라(scala)
		하나의 데이터를 저장하는 구조
		-> 길이가 1인 벡터
		-> 하나의 데이터만 저장한다

	2. 벡터(vector)
		같은 자료형을 가진 여러개의 데이터를 저장하는 구조
		-> 1차원 구조

	3. 매트릭스(matrix)
		같은 자료형을 가진 여러개의 데이터를 저장하는 구조
		-> 2차원 구조
		-> 행(row)과 열(column)을 가진 표 형태
		-> 행: 가로줄, 열: 세로줄	

	4. 배열(array)
		매트릭스를 여러개 저장하는 구조
		-> N차원
		
	5. 데이터프레임(dataframe)
		매트릭스와 같은 행과 열을 가진 2차원 표형태
		단, 데이터프레임은 열마다 다른 자료형을 저장할수 있다	

	6. 리스트(list)
		여러개의 자료구조를 저장하는 구조
		[벡터, 벡터, 벡터], [벡터, 배열, 매트릭스]

	7. 요인(factor)
		지정된 범위의 값만 저장할 수 있도록 제한한 벡터
	
	** 여러개의 자료형을 사용할 수 있는것
		리스트, 데이터프레임
	** 하나의 자료형만 사용할 수 있는것
		벡터, 매트릭스, 배열


벡터(vector)

	      1	       2           3           4     -> 순서번호(index)
	[    값1	][    값2	][   값3	][   값4	]...

	같은 자료형을 가진 여러개의 값들을 저장하는 1차원 구조
	하나의 자료형의 여러개 값들을 변수 1개로 관리할 수 있다
	
	여러개의 값들은 나열되어 있기 때문에 순서가 존재한다
	인덱스(index) : 각 값에 부여된 순서번호. 1번부터 순차적으로 증가한다

벡터 생성
	1. c() 함수
		c(값1, 값2, 값3...)
		여러개의 값을 하나의 벡터로 생성한다

	2. seq() 함수
		seq(시작값, 끝값, 증감값)
		-> seq(from = 시작값, to=끝값, by=증감값)
		시작값부터 끝값까지 증감하는 값들을 하나의 벡터로 생성한다

		** by를 생략할 경우 시작값과 끝값의 대소관계에 따라
		1씩 증가하거나 감소한다

		시작값 > 끝값 : 1씩 감소한다
		시작값 < 끝값 : 1씩 증가한다
		* 규칙성이 있는 숫자값들을 벡터로 만들때 주로 사용한다
	
	3. 콜론 연산자(:)
		시작값 : 끝값
		시작값부터 끝값까지 1씩 증감하는 숫자값들을 벡터로 만든다
		
		시작값 < 끝값 이면 1씩 증가한다
		시작값 > 끝값 이면 1씩 감소한다

	4. rep() 함수
		rep(벡터, times, each)
		벡터의 요소를 각각 each번 반복하고, 이 행위를
		times번 반복하는 값들을 벡터로 만든다


벡터에서 요소 가져오기
	1. 벡터에서 하나의 요소 가져오기
		원하는 특정 요소를 가져올때는 해당 요소에 부여된
		인덱스 번호를 사용한다
		벡터명[인덱스번호]

		names <- ["철수"]["영희"]["길동"]
		ex) 영희만 가져오기 -> names[2]

	2. 벡터에서 여러개의 요소 가져오기
		여러개의 값들을 가져올때는 대괄호 안에 해당 요소들의
		인덱스번호가 담긴 벡터를 사용한다
	
		ex) 철수, 영희 가져오기 -> names[1,2]
		
	3. 벡터에서 특정 요소를 제외하고 가져오기

























	




